#!/bin/bash

if [ -z "$1" ]
then
  echo -e "Error: application not specified in tna-run\n";
  echo "PARAMETERS"
  echo "  application          the Python package you want to run"
  echo "                       Example: tna-run my_app:app";
  exit 1
fi

if [ "$ENVIRONMENT" == 'develop' ] && [ -n "$NPM_DEVELOP_COMMAND" ]
then
  tna-node "$NPM_DEVELOP_COMMAND"
fi

DEFAULT_THREADS_AND_WORKERS=$(python -c "import multiprocessing; print(multiprocessing.cpu_count() * 2 + 1)")

if [ "$ENVIRONMENT" == 'production' ]
then
  [[ -z $LOG_LEVEL ]] && LOG_LEVEL=WARN
  [[ -z $WORKERS ]] && WORKERS=$DEFAULT_THREADS_AND_WORKERS
  [[ -z $THREADS ]] && THREADS=$DEFAULT_THREADS_AND_WORKERS
  poetry run gunicorn "$1" --workers "$WORKERS" --threads "$THREADS" --log-level "$LOG_LEVEL" --access-logfile - --bind 0.0.0.0:8080
elif [ "$ENVIRONMENT" == 'develop' ]
then
  [[ -z $LOG_LEVEL ]] && LOG_LEVEL=DEBUG
  [[ -z $WORKERS ]] && WORKERS=3
  [[ -z $THREADS ]] && THREADS=3
  poetry run gunicorn "$1" --workers "$WORKERS" --threads "$THREADS" --log-level "$LOG_LEVEL" --reload --bind 0.0.0.0:8080
  # poetry run python manage.py runserver 0.0.0.0:8080
else
  [[ -z $LOG_LEVEL ]] && LOG_LEVEL=INFO
  [[ -z $WORKERS ]] && WORKERS=$DEFAULT_THREADS_AND_WORKERS
  [[ -z $THREADS ]] && THREADS=$DEFAULT_THREADS_AND_WORKERS
  poetry run gunicorn "$1" --workers "$WORKERS" --threads "$THREADS" --log-level "$LOG_LEVEL" --access-logfile - --bind 0.0.0.0:8080
fi
