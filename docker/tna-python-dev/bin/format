#!/bin/bash

cd /app || return

echo "Running isort..."
if [ -f "/app/.isort.cfg" ]
then
  echo "Using app config"
  isort --settings-file /app/.isort.cfg /app --overwrite-in-place
else
  echo "Using default config"
  isort --settings-file /home/app/.isort.cfg /app --overwrite-in-place
fi
echo

echo "Running black..."
black -t py38 -t py39 -t py310 -t py311 -t py312 --verbose /app
echo

echo "Running flake8..."
if [ -f "/app/.flake8" ]
then
  echo "Using app config"
  flake8 --config=/app/.flake8 /app
else
  echo "Using default config"
  flake8 --config=/home/app/.flake8 /app
fi
echo

. "$HOME/.nvm/nvm.sh"
if [ -f "/app/.nvmrc" ]
then
  nvm install
else
  nvm use default
fi

echo "Running prettier..."
prettier --write /app
echo

echo "Running stylelint..."
if [ -f "/app/.stylelintrc" ]
then
  echo "Using app config (.stylelintrc)"
  stylelint --config /app/.stylelintrc --fix "/app/**/*.{css,scss}"
elif [ -f "/app/stylelint.config.js" ]
then
  echo "Using app config (stylelint.config.js)"
  stylelint --config /app/stylelint.config.js --fix "/app/**/*.{css,scss}"
elif [ -f "/app/.stylelintrc.js" ]
then
  echo "Using app config (.stylelintrc.js)"
  stylelint --config /app/.stylelintrc.js --fix "/app/**/*.{css,scss}"
elif [ -f "/app/stylelint.config.mjs" ]
then
  echo "Using app config (stylelint.config.mjs)"
  stylelint --config /app/stylelint.config.mjs --fix "/app/**/*.{css,scss}"
elif [ -f "/app/.stylelintrc.mjs" ]
then
  echo "Using app config (.stylelintrc.mjs)"
  stylelint --config /app/.stylelintrc.mjs --fix "/app/**/*.{css,scss}"
elif [ -f "/app/stylelint.config.cjs" ]
then
  echo "Using app config (stylelint.config.cjs)"
  stylelint --config /app/stylelint.config.cjs --fix "/app/**/*.{css,scss}"
elif [ -f "/app/.stylelintrc.cjs" ]
then
  echo "Using app config (.stylelintrc.cjs)"
  stylelint --config /app/.stylelintrc.cjs --fix "/app/**/*.{css,scss}"
elif [ -f "/app/.stylelintrc.json" ]
then
  echo "Using app config (.stylelintrc.json)"
  stylelint --config /app/.stylelintrc.json --fix "/app/**/*.{css,scss}"
elif [ -f "/app/.stylelintrc.yml" ]
then
  echo "Using app config (.stylelintrc.yml)"
  stylelint --config /app/.stylelintrc.yml --fix "/app/**/*.{css,scss}"
elif [ -f "/app/.stylelintrc.yaml" ]
then
  echo "Using app config (.stylelintrc.yaml)"
  stylelint --config /app/.stylelintrc.yaml --fix "/app/**/*.{css,scss}"
else
  echo "Using default config"
  stylelint --config /home/app/.stylelintrc --fix "/app/**/*.{css,scss}"
fi
echo

echo "Running eslint..."
if [ -f "/app/.eslintrc.js" ]
then
  echo "Using app config (.eslintrc.js)"
  eslint -c /app/.eslintrc.js --fix "/app"
elif [ -f "/app/.eslintrc.mjs" ]
then
  echo "Using app config (.eslintrc.mjs)"
  eslint -c /app/.eslintrc.mjs --fix "/app"
elif [ -f "/app/.eslintrc.cjs" ]
then
  echo "Using app config (.eslintrc.cjs)"
  eslint -c /app/.eslintrc.cjs --fix "/app"
elif [ -f "/app/eslintrc.config.js" ]
then
  echo "Using app config (eslintrc.config.js)"
  eslint -c /app/eslintrc.config.js --fix "/app"
elif [ -f "/app/eslintrc.config.mjs" ]
then
  echo "Using app config (eslintrc.config.mjs)"
  eslint -c /app/eslintrc.config.mjs --fix "/app"
elif [ -f "/app/eslintrc.config.cjs" ]
then
  echo "Using app config (eslintrc.config.cjs)"
  eslint -c /app/eslintrc.config.cjs --fix "/app"
else
  echo "Using default config"
  eslint -c /home/app/.eslintrc.js --fix "/app"
fi
echo
