name: Docker build
on:
  workflow_call:
    inputs:
      image-name:
        required: true
        type: string
      docker-context:
        required: true
        type: string
      dockerfile:
        required: true
        type: string
permissions:
  packages: write
  contents: read
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - uses: hadolint/hadolint-action@v3.1.0
      with:
        dockerfile: ${{ inputs.docker-context }}/${{ inputs.dockerfile }}
  # build-and-deploy:
  #   name: Build and deploy
  #   runs-on: ubuntu-latest
  #   needs: lint
  #   steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Build image
      run: docker build --tag ${{ inputs.image-name }} --label "runnumber=${GITHUB_RUN_ID}" --platform=linux/amd64 ${{ inputs.docker-context }}
    - name: Log in to registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
    - name: Push image
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository_owner }}/${{ inputs.image-name }}
        # Change all uppercase to lowercase
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        # Use Docker `latest` tag convention
        [ "$VERSION" == "main" ] && VERSION=latest
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        docker tag ${{ inputs.image-name }} $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION
