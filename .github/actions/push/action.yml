name: Push Docker image

inputs:
  image-id:
    required: true
    type: string
  image-tag:
    required: true
    type: string
  major-version:
    required: true
    type: string
  minor-version:
    required: true
    type: string
  docker-context:
    required: true
    type: string
  base-image:
    required: false
    type: string
  user-image:
    required: false
    type: string
    default: appuser
  github-token:
    required: true
    type: string

runs:
  using: "composite"
  steps:
    - name: Log in to registry
      run: echo "${{ inputs.github-token }}" | docker login ghcr.io -u $ --password-stdin
      shell: bash
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Build and push images
      uses: docker/build-push-action@v6
      with:
        context: ${{ inputs.docker-context }}
        platforms: linux/amd64,linux/arm64
        labels: |
          runnumber=${{ github.run_id }}
        build-args: |
          BASE_IMAGE=${{ inputs.base-image }}
          BASE_IMAGE_TAG=${{ inputs.image-tag }}
          TNA_DOCKER_IMAGE_VERSION=${{ inputs.image-tag }}
          TNA_DOCKER_IMAGE_SOURCE=${{ github.server_url	}}/${{ github.repository }}/blob/main/${{ inputs.docker-context }}/Dockerfile
          USER_IMAGE=${{ inputs.user-image }}
        push: true
        tags: ${{ inputs.image-id }}:${{ inputs.image-tag }}
        provenance: false
    - name: List manifest
      run: docker buildx imagetools inspect ${{ inputs.image-id }}:${{ inputs.image-tag }}
      shell: bash
    - name: Tag major version
      if: startsWith(github.ref, 'refs/tags/')
      uses: docker/build-push-action@v6
      with:
        context: ${{ inputs.docker-context }}
        platforms: linux/amd64,linux/arm64
        labels: |
          runnumber=${{ github.run_id }}
        build-args: |
          BASE_IMAGE=${{ inputs.base-image }}
          BASE_IMAGE_TAG=${{ inputs.major-version }}
          TNA_DOCKER_IMAGE_VERSION=${{ inputs.image-tag }}
          TNA_DOCKER_IMAGE_SOURCE=${{ github.server_url	}}/${{ github.repository }}/blob/main/${{ inputs.docker-context }}/Dockerfile
          USER_IMAGE=${{ inputs.user-image }}
        push: true
        tags: ${{ inputs.image-id }}:${{ inputs.major-version }}
        provenance: false
    - name: Tag minor version
      if: startsWith(github.ref, 'refs/tags/')
      uses: docker/build-push-action@v6
      with:
        context: ${{ inputs.docker-context }}
        platforms: linux/amd64,linux/arm64
        labels: |
          runnumber=${{ github.run_id }}
        build-args: |
          BASE_IMAGE=${{ inputs.base-image }}
          BASE_IMAGE_TAG=${{ inputs.minor-version }}
          TNA_DOCKER_IMAGE_VERSION=${{ inputs.image-tag }}
          TNA_DOCKER_IMAGE_SOURCE=${{ github.server_url	}}/${{ github.repository }}/blob/main/${{ inputs.docker-context }}/Dockerfile
          USER_IMAGE=${{ inputs.user-image }}
        push: true
        tags: ${{ inputs.image-id }}:${{ inputs.minor-version }}
        provenance: false
    - name: Tag latest
      if: startsWith(github.ref, 'refs/tags/')
      uses: docker/build-push-action@v6
      with:
        context: ${{ inputs.docker-context }}
        platforms: linux/amd64,linux/arm64
        labels: |
          runnumber=${{ github.run_id }}
        build-args: |
          BASE_IMAGE=${{ inputs.base-image }}
          BASE_IMAGE_TAG=latest
          TNA_DOCKER_IMAGE_VERSION=${{ inputs.image-tag }}
          TNA_DOCKER_IMAGE_SOURCE=${{ github.server_url	}}/${{ github.repository }}/blob/main/${{ inputs.docker-context }}/Dockerfile
          USER_IMAGE=${{ inputs.user-image }}
        push: true
        tags: ${{ inputs.image-id }}:latest
        provenance: false
    - name: Scan for vulnerabilities
      uses: aquasecurity/trivy-action@0.28.0
      with:
        image-ref: ${{ inputs.image-id }}:${{ inputs.image-tag }}
        format: "sarif"
        output: "trivy-results.sarif"
        ignore-unfixed: true
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: "trivy-results.sarif"
