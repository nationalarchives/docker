name: Test Docker image

inputs:
  application-repository:
    required: true
    type: string
  service:
    required: true
    type: string
  image:
    required: true
    type: string
  image-tag:
    required: true
    type: string

runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.application-repository }}
        path: ${{ inputs.application-repository }}
    - name: Start application
      run: |
        cd ${{ inputs.application-repository }}
        yq '(.services.${{ inputs.service }}.build.args.IMAGE|="ghcr.io/${{ github.repository_owner }}/${{ inputs.image }}")' docker-compose.yml > tmp.$$.yml && mv tmp.$$.yml docker-compose.yml
        yq '(.services.${{ inputs.service }}.build.args.IMAGE_TAG|="${{ inputs.image-tag }}")' docker-compose.yml > tmp.$$.yml && mv tmp.$$.yml docker-compose.yml
        yq 'del(.services.${{ inputs.service }}.volumes)' docker-compose.yml > tmp.$$.yml && mv tmp.$$.yml docker-compose.yml
        PORT=$(yq '(.services.${{ inputs.service }}.ports)' docker-compose.yml | sed -e 's/^\- \(.*\)\:.*$/\1/')
        echo "PORT=$PORT" >> "$GITHUB_ENV"
        docker compose up ${{ inputs.service }} -d
      shell: bash

    - name: Sleep for 30 seconds
      uses: jakejarvis/wait-action@master
      with:
        time: '30s'

    - name: Curl
      run: |
        curl http://localhost:${{ env.PORT }}/healthcheck/live/
        curl -i http://localhost:${{ env.PORT }}/healthcheck/live/
      shell: bash



    - name: Wait for healthcheck
      uses: cygnetdigital/wait_for_response@v2.0.0
      with:
        url: http://localhost:${{ env.PORT }}/healthcheck/live/
