name: Test Docker image

inputs:
  application-repository:
    required: true
    type: string
  service:
    required: true
    type: string
  image:
    required: true
    type: string
  image-tag:
    required: true
    type: string

runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.application-repository }}
        path: test
    - name: TODO
      run: |
        echo "inputs.application-repository: ${{ inputs.application-repository }}"
        echo "inputs.image: ${{ inputs.image }}"
        echo "inputs.image-tag: ${{ inputs.image-tag }}"
        ls -alh
        ls -alh test
      shell: bash
    - name: Update docker-compose.yml
      run: |
        cd test
        cat docker-compose.yml
        yq '(.services.app.build.args.IMAGE|="${{ inputs.image }}")' docker-compose.yml > tmp.$$.yml && mv tmp.$$.yml docker-compose.yml
        yq '(.services.app.build.args.IMAGE_TAG|="ghcr.io/${{ github.repository_owner }}/${{ inputs.image-tag }}")' docker-compose.yml > tmp.$$.yml && mv tmp.$$.yml docker-compose.yml
        cat docker-compose.yml
        PORT=$(yq '(.services.app.ports)' docker-compose.yml | sed -e 's/^\- \(.*\)\:.*$/\1/')
        echo "PORT=$PORT" >> "$GITHUB_ENV"
        docker compose up -d
      shell: bash
    - name: Wait for healthcheck
      uses: nev7n/wait_for_response@v1
      with:
        url: http://localhost:${{ env.PORT }}/healthcheck/live/
    
